query getAllEmployee {
  employees {
    employeeId
    userId
    name
    position
    department {
      departmentId
      departmentName
    }
    contractType
    phone
    email
    startDate
    photoUrl
  }
  departments {
    departmentId
    departmentName
  }
}

query getEmployee($employeeId: Int, $userId: String) {
  employee(employeeId: $employeeId, userId: $userId) {
    employeeId
    userId
    name
    position
    department {
      departmentId
      departmentName
    }
    contractType
    phone
    email
    startDate
    photoUrl
  }
}

query getAllDepartments {
  departments {
    departmentId
    departmentName
  }
}

query getEmployeeWorking($dt: String) {
  employeeWorking(dt: $dt) {
    employeeId
    name
    position
    department {
      departmentId
      departmentName
    }
    userId
    workingDate
    workingType
    startAt
    endAt
  }
}

query getEmployeeWorkingConditional($searchCondition: EmployeeWorkingCondition, $page: Int = 0, $size: Int = 10) {
  employeeWorkingConditional(searchCondition: $searchCondition, page: $page, size: $size) {
    content {
      employeeId
      name
      position
      department {
        departmentId
        departmentName
      }
      userId
      workingDate
      workingType
      startAt
      endAt
    }
    totalElements
    totalPages
    page
    size
  }
}

mutation addEmployee($input: EmployeeInput!, $file: Upload) {
  addEmployee(input: $input, file: $file) {
    employeeId
    userId
    name
    position
    email
    department {
      departmentId
      departmentName
    }
    contractType
    phone
    startDate
  }
}

mutation modEmployee($employeeId: Int, $input: EmployeeModInput!, $file: Upload) {
  modEmployee(employeeId: $employeeId, input: $input, file: $file) {
    employeeId
    userId
    name
    position
    email
    department {
      departmentId
      departmentName
    }
    contractType
    phone
    startDate
  }
}

query getCodes($parents: [String]) {
  codes(parents: $parents) {
    parentCode
    parentName
    codes {
      code
      name
    }
  }
}

mutation singleUpload($employeeId: Int, $file: Upload!) {
  singleUpload(employeeId: $employeeId, file: $file) {
    filename
  }
}

mutation changePwd($employeeId: Int, $pwd: String) {
  changePwd(employeeId: $employeeId, pwd: $pwd) {
    employeeId
    userId
    name
    position
    email
    department {
      departmentId
      departmentName
    }
    contractType
    phone
    startDate
  }
}
